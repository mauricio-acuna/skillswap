# Production Configuration
spring:
  profiles:
    active: prod
  
  # PostgreSQL Database for Production
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/skillswap_prod}
    username: ${DATABASE_USERNAME:skillswap_user}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
  
  # JPA Configuration for Production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        '[format_sql]': false
        '[use_sql_comments]': false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
  
  # Flyway enabled for production
  flyway:
    enabled: true
    baseline-on-migrate: true
    validate-on-migrate: true
    locations: classpath:db/migration
  
  # Production Redis
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD}
      timeout: 2000ms
      ssl: ${REDIS_SSL:false}
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 2
          max-wait: -1ms

# Production Server Configuration
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  http2:
    enabled: true

# Production Security
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: never

# Production Logging
logging:
  level:
    '[com.skillswap]': INFO
    '[org.springframework.security]': WARN
    '[org.hibernate.SQL]': WARN
    '[org.springframework.web]': WARN
    root: INFO
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/skillswap/skillswap-backend.log
    max-size: 100MB
    max-history: 30

# Production JWT (secure)
skillswap:
  jwt:
    secret: ${JWT_SECRET}
    access-token-expiration: 900000      # 15 minutes
    refresh-token-expiration: 604800000  # 7 days
  
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://skillswap.com,https://www.skillswap.com}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  # Production External Services
  agora:
    app-id: ${AGORA_APP_ID}
    app-certificate: ${AGORA_APP_CERTIFICATE}
  
  sendgrid:
    api-key: ${SENDGRID_API_KEY}
    from-email: ${FROM_EMAIL:noreply@skillswap.com}
